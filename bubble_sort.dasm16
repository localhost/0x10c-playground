:outer
  set x, data
  set y, [num]
  sub y, 1
  set z, 0

:inner
  ifg [x], [x + 1]
  set pc, swap

:next
  add x, 1

  sub y, 1
  ifn y, 0
  set pc, inner

  ifn z, 0 ; continue sorting?
  set pc, outer

:end
  set pc, end

:swap
  add z, 1

  ; swap values
  set a, [x]
  set [x], [x + 1]
  set [x + 1], a

  set pc, next

:num dat 20
:data
  dat 4096, 1, 300, 64, 42, 23, 100, 101, 500, 0
  dat 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
